@using NeoSchool.Services
@model NeoSchool.Models.MaterialViewModel
@inject IMaterialService service
@{
    ViewData["Title"] = "ViewAll";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var AllMaterials = service.GetAllMaterials();
}

<h1 class="d-flex justify-content-around row">Materials</h1>
<hr class="alert-primary" style="height:1px" />

<div id="videos" class="mt-3">
    @for (int i = 0; i < AllMaterials.Count; i += 3)
    {
        <div class="products-row row d-flex justify-content-around my-5">
            @for (int j = i; j < i + 3; j++)
            {
                if (j < AllMaterials.Count)
                {
                    
            <div id="material-box" class="col-md-4 border" style="background-color:aliceblue">
                <div id="material-name" class="text-center">
                    <a  class="text-capitalize" href="/Material/MaterialDetails/@AllMaterials[j].Id">@AllMaterials[j].Name</a>
                </div>
                <hr />
                <div id="material-url" class="m-4">
                    <a href="@AllMaterials[j].FileLink" class="text-justify text-primary">Download this file</a>
                </div>

                <div id="description-text" class="m-4">
                    <a href="/Material/MaterialDetails/@AllMaterials[j].Id" class="text-justify text-secondary">@service.GetShortDescription(AllMaterials[j].Description)</a>
                </div>
                <div id="description-text" class="m-4">
                    <p>Author: @AllMaterials[j].Author.UserName</p>
                </div>
            </div>
                }
                else
                {
                    <div class="product col-md-4 empty">
                    </div>
                }
            }
        </div>
        <hr />
    }
</div>